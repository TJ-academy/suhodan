<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="orders">
	<insert id="order" parameterType="com.example.suhodan.orders.OrderDTO" useGeneratedKeys="true" keyProperty="order_id" keyColumn="order_id">
	    insert into suho_orders (
	        user_id, 
	        order_date, 
	        order_amount, 
	        pay_method, 
	        refund_bank, 
	        refund_account, 
	        order_address1, 
	        order_address2, 
	        phone
	    ) values (
	        #{user_id},
	        sysdate,
	        #{order_amount},
	        #{pay_method},
	        #{refund_bank},
	        #{refund_account},
	        #{order_address1},
	        #{order_address2},
	        #{phone}
	    )
	</insert>
	<select id="getUserOrders" resultType="map">
	    SELECT o.order_id, o.order_status, o.pay_method, o.order_date,
	           oi.item_id, oi.product_name, oi.quantity, oi.unit_price,
	           g.img
	    FROM suho_orders o
	    INNER JOIN suho_order_items oi ON o.order_id = oi.order_id
	    INNER JOIN suho_goods g ON oi.product_name = g.name
	    WHERE o.user_id = #{userId}
	    ORDER BY o.order_id, oi.item_id
	</select>
	<delete id="orderCancel">
		delete from suho_orders where order_id = #{order_id}
	</delete>
	<update id="requestRefund">
		update suho_orders set order_status = '환불요청' where order_id= #{order_id}
	</update>
	<select id="requestRefundDetail" resultType="com.example.suhodan.orders.OrderDTO">
		select order_id, order_amount, refund_bank, refund_account from suho_orders where order_id = #{order_id}
	</select>
	   <!-- 배송 디테일 -->
   <select id="detailDelivery" resultType="map">
      SELECT
          o.order_id,
          o.order_status,
          TO_CHAR(o.order_date, 'YYYY-MM-DD') AS order_date,
          i.item_id,
          i.product_name,
          i.quantity,
          i.unit_price,
          i.product_id,
          g.img
      FROM
          suho_orders o
      JOIN
          suho_order_items i ON o.order_id = i.order_id
      JOIN
          suho_goods g ON i.product_id = g.goods_id
      WHERE
          o.order_id = #{order_id}
      ORDER BY
          o.order_id
   </select>
	<!-- 관리자기능 -->
	<select id="order_all" resultType="com.example.suhodan.orders.OrderDTO">
		select * from suho_orders
	</select>
	<select id="order_detail" resultType="com.example.suhodan.orders.OrderDTO">
		select * from suho_orders where order_id = #{order_id}
	</select>
	<update id="updateStatus">
		update suho_orders set order_status = #{order_status} 
		where order_id = #{order_id}
	</update>	
	<select id="getTotalCountSearch" resultType="int">
		SELECT COUNT(*)
		FROM suho_orders
		<where>
			<choose>
				<when test="searchType == 'user_id' and searchKeyword != ''">
					user_id LIKE '%' || #{searchKeyword} || '%'
				</when>
				<when test="searchType == 'order_id' and searchKeyword != ''">
					order_id LIKE '%' || #{searchKeyword} || '%'
				</when>
				<when test="searchType == 'phone' and searchKeyword != ''">
					(phone1 || phone2 || phone3) LIKE '%' || #{searchKeyword} || '%'
				</when>
			</choose>
		</where>
	</select>
	<select id="listPagingSearch" resultType="com.example.suhodan.orders.OrderDTO">
		SELECT *
		FROM (
		SELECT ROWNUM AS rnum, inner_query.*
		FROM (
		SELECT *
		FROM suho_orders
		<where>
			<choose>
				<when test="searchType == 'user_id' and searchKeyword != ''">
					user_id LIKE '%' || #{searchKeyword} || '%'
				</when>
				<when test="searchType == 'order_id' and searchKeyword != ''">
					order_id LIKE '%' || #{searchKeyword} || '%'
				</when>
				<when test="searchType == 'phone' and searchKeyword != ''">
					(phone1 || phone2 || phone3) LIKE '%' || #{searchKeyword} || '%'
				</when>
			</choose>
		</where>
		<choose>
			<when test="sortBy == 'order_date'">
				ORDER BY order_date ${sortOrder}
			</when>
			<when test="sortBy == 'order_amount'">
				ORDER BY order_amount ${sortOrder}
			</when>
			<otherwise>
				ORDER BY order_date DESC </otherwise>
		</choose>
		) inner_query
		)
		WHERE rnum BETWEEN #{start} AND #{end}
	</select>
	<select id="countUserOrders" resultType="int">
	    SELECT COUNT(*)
	    FROM suho_orders
	    WHERE user_id = #{userId}
	</select>
	<select id="getUserOrdersPaged" resultType="map">
	    SELECT * FROM (
	        SELECT ROWNUM AS rnum, inner_query.*
	        FROM (
	            SELECT 
	                o.order_id, o.order_status, o.pay_method, o.order_date,
	                oi.item_id, oi.product_name, oi.quantity, oi.unit_price,
	                g.img
	            FROM suho_orders o
	            INNER JOIN suho_order_items oi ON o.order_id = oi.order_id
	            INNER JOIN suho_goods g ON oi.product_name = g.name
	            WHERE o.user_id = #{userId}
	            ORDER BY o.order_id DESC
	        ) inner_query
	        WHERE ROWNUM &lt;= #{offset} + #{limit}
	    )
	    WHERE rnum &gt; #{offset}
	</select>

	
	
</mapper>